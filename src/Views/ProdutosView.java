/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views;

import Controllers.ProdutoController;
import Models.Produto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marcus.hmoraes & Patrick Chagas
 */
public class ProdutosView extends javax.swing.JInternalFrame {

    private String modoTela;
    //Criar/Alterar/Excluir

    /**
     * Creates new form Produto
     */
    public ProdutosView() {
        initComponents();
        DesabilitarFormulario();
        LoadTable();
    }

    public void LimparFormulario() {
       txtCodItem.setText("");
        txtNome.setText("");
        txtPreco.setText("");
        txtEstoque.setText("");
        txtFornecedor.setText("");
    }

    private boolean ValidarFormulario() {
        if (modoTela.equals("Consultar")) {
            return true;
        }
        if (this.txtNome.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Defina um nome para o produto!");
            return false;
        }
        if (this.txtEstoque.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Defina uma quantidade em estoque!");
            return false;
        }
        if(this.txtPreco.getText().equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(this, "Defina um preço para o produto!");
            return false;
        }
        return true;

    }

    /**
     * Método auxiliar para desabilitar campos do formulário
     */
    public void DesabilitarFormulario() {
        txtNome.setEditable(false);
        txtPreco.setEditable(false);
        txtEstoque.setEditable(false);
        txtFornecedor.setEditable(false);
        txtCodItem.setEditable(false); // nunca true

        btnSalvar.setEnabled(false);
        btnCancelar.setEnabled(false);
    }

    /**
     * Método auxiliar para habilitar campos do formulário
     */
    public void HabilitarFormulario() {
        txtNome.setEditable(true);
        txtPreco.setEditable(true);
        txtEstoque.setEditable(true);
        txtFornecedor.setEditable(true);

        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }

    public void HabilitarFormularioParaConsulta() {
        txtNome.setEditable(true);
        txtCodItem.setEditable(true);

        btnSalvar.setEnabled(true);
        btnCancelar.setEnabled(true);
    }

    public void LoadTable() {

        //Peço ao controller resgatar os produtos  do banco de dados
        ArrayList<String[]> linhasProdutos = ProdutoController.getProduto();

        DefaultTableModel tmProdutos = (DefaultTableModel) this.tblProduto.getModel();
        //Limpo a tabela, excluindo todas as linhas
        tmProdutos.setRowCount(0);

        //Para cada produto resgatado do banco de dados, atualizo a tabela
        linhasProdutos.forEach((c) -> {
            tmProdutos.addRow(c);
        });

        //Defino o tamanho para cada coluna
        tblProduto.getColumnModel().getColumn(0).setPreferredWidth(300); //Codigo do item
        tblProduto.getColumnModel().getColumn(1).setPreferredWidth(250); // Nome
        tblProduto.getColumnModel().getColumn(2).setPreferredWidth(200); // Preco
        tblProduto.getColumnModel().getColumn(3).setPreferredWidth(300); // Quantidade
    }

    public void ConsultaLoadTable() {

        //Peço ao controller resgatar os produtos do banco de dados
        ArrayList<Produto> linhasProdutos = ProdutoController.getConsultaProduto();
        ArrayList<String[]> adicionarATabela = ProdutoController.getProduto();
        DefaultTableModel tmProdutos = (DefaultTableModel) this.tblProduto.getModel();
        //Limpo a tabela, excluindo todas as linhas
        tmProdutos.setRowCount(0);

        //Para cada produto resgatado do banco de dados, atualizo a tabela
        for (int i = 0; i < linhasProdutos.size(); i++) {
            if (linhasProdutos.get(i).getNome().equals(txtNome.getText())) {
                tmProdutos.addRow(adicionarATabela.get(i));
            }
        }

        //Defino o tamanho para cada coluna
        tblProduto.getColumnModel().getColumn(0).setPreferredWidth(300); //Nome
        tblProduto.getColumnModel().getColumn(1).setPreferredWidth(250); // Preco
        tblProduto.getColumnModel().getColumn(2).setPreferredWidth(200); // Quantidade
        tblProduto.getColumnModel().getColumn(3).setPreferredWidth(300); // Codigo do item
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFornecedor = new javax.swing.JTextField();
        txtCodItem = new javax.swing.JTextField();
        txtPreco = new javax.swing.JFormattedTextField();
        txtEstoque = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProduto = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnConsultar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JToggleButton();
        btnCancelar = new javax.swing.JToggleButton();

        setBorder(null);
        setClosable(true);
        setForeground(java.awt.Color.white);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro de Produto");
        setEnabled(false);
        setFrameIcon(null);
        setMinimumSize(new java.awt.Dimension(852, 852));
        setPreferredSize(new java.awt.Dimension(852, 563));
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        setVerifyInputWhenFocusTarget(false);
        setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));
        jPanel1.setForeground(new java.awt.Color(240, 240, 240));
        jPanel1.setEnabled(false);

        jLabel1.setText("Nome");

        jLabel2.setText("Preço");

        jLabel3.setText("Código do item");

        jLabel5.setText("Quantidade em estoque");

        jLabel6.setText("Fornecedor");

        txtCodItem.setEditable(false);

        tblProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome do item", "Preço", "Quantidade", "Código do item", "Fornecedor"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProduto);

        btnCadastrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icon_add_32.png"))); // NOI18N
        btnCadastrar.setToolTipText("Cadastrar Cliente");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icon_edit_32.png"))); // NOI18N
        btnAlterar.setToolTipText("Alterar");
        btnAlterar.setMaximumSize(new java.awt.Dimension(48, 48));
        btnAlterar.setMinimumSize(new java.awt.Dimension(48, 48));
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icon_delete_32.png"))); // NOI18N
        btnDelete.setToolTipText("Excluir Cliente");
        btnDelete.setMaximumSize(new java.awt.Dimension(48, 48));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icones/icon_search_32.png"))); // NOI18N
        btnConsultar.setToolTipText("Consultar Clientes");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnSalvar.setSelected(true);
        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                                    .addComponent(txtPreco))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEstoque)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                                    .addComponent(txtFornecedor))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodItem)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jScrollPane1))
                        .addGap(60, 60, 60))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCodItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnCancelar))
                .addGap(86, 86, 86)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.getAccessibleContext().setAccessibleName("Cadastro de Produtos");

        setBounds(0, 0, 1003, 570);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        modoTela = "Criar";
        HabilitarFormulario();
        
        LimparFormulario();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        btnSalvar.setText("Consultar");
        HabilitarFormularioParaConsulta();
        modoTela = "Consultar";
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        
        if (ValidarFormulario()) {
            if (modoTela.equals("Criar")) {
                //Passo ao controller a entrada do usuário e peço para salvar no banco de dados
                if (ProdutoController.salvar(
                        txtNome.getText(),
                        Integer.parseInt(txtEstoque.getText()),
                     //============================ARRUMAR CONVERSÃO=======================================================
                        Double.parseDouble(txtPreco.getText()),
                     //====================================================================================================   
                        txtFornecedor.getText())) {
                     JOptionPane.showMessageDialog(null, "Produto cadastrado com sucesso!");
                    //Recarrego a tabela com os dados resgatados do banco de dados
                    this.LoadTable();
                } else {
                    JOptionPane.showMessageDialog(null, "Falha ao cadastrar produto!");
                }

            } else if (modoTela.equals("Editar")) {

                //Passo ao controller a entrada do usuário e peço para atualizar o banco de dados
                if (ProdutoController.atualizar(
                        txtNome.getText(),
                         Double.parseDouble(txtPreco.getText()),
                        Integer.parseInt(txtEstoque.getText()),
                        txtFornecedor.getText())) {
                    //Recarrego a tabela com os dados resgatados do banco de dados
                    this.LoadTable();
                    JOptionPane.showMessageDialog(this, "Produto atualizado com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Falha ao atualizar produto!");
                }

            }

            LimparFormulario();
            DesabilitarFormulario();

        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        DesabilitarFormulario();
        LimparFormulario();
        
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         if (tblProduto.getRowCount() > 0) {
            int numeroLinha = tblProduto.getSelectedRow();
            if (ProdutoController.excluir(Integer.parseInt(tblProduto.getValueAt(numeroLinha, 0).toString()))) {
                this.LoadTable();
                JOptionPane.showMessageDialog(this, "Produto excluído da base de dados");
            } else {
                JOptionPane.showMessageDialog(this, "Falha ao excluir o produto!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há produtos para excluir!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
          //Verifico se há linhas para poder editar
        if (tblProduto.getRowCount() > 0) {
            //Verifico se o usuário selecionou alguma linha (Primeira linha = 0)
            if (tblProduto.getSelectedRow() >= 0) {

                HabilitarFormulario();

                //Variável acessória para identifcar se o formulário está em modo de edição ou alteração
                modoTela = "Editar";
                //Atribuo os valores que estão na linha selecionada para a tabela
                txtCodItem.setText(tblProduto.getModel().getValueAt(tblProduto.getSelectedRow(), 1).toString());
                txtNome.setText(tblProduto.getModel().getValueAt(tblProduto.getSelectedRow(), 2).toString());
                txtPreco.setText(tblProduto.getModel().getValueAt(tblProduto.getSelectedRow(), 3).toString());
                txtEstoque.setName(tblProduto.getModel().getValueAt(tblProduto.getSelectedRow(), 4).toString());
                txtFornecedor.setName(tblProduto.getModel().getValueAt(tblProduto.getSelectedRow(),5).toString());

            } else {
                JOptionPane.showMessageDialog(this, "Selecione um produto para editar!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Não há produtos para editar!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JToggleButton btnCancelar;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnDelete;
    private javax.swing.JToggleButton btnSalvar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProduto;
    private javax.swing.JTextField txtCodItem;
    private javax.swing.JFormattedTextField txtEstoque;
    private javax.swing.JTextField txtFornecedor;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtPreco;
    // End of variables declaration//GEN-END:variables
}
